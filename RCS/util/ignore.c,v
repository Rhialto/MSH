head	1.56;
access;
symbols
	SHAREWARE2:1.56
	MAXON5:1.55
	MAXON4:1.53
	MAXON3:1.51
	MAXON2:1.46
	MAXON1:1.40
	Patch3a:1.31
	Patch3:1.30;
locks;
comment	@ * @;


1.56
date	96.12.22.17.13.23;	author Rhialto;	state Rel;
branches;
next	1.55;

1.55
date	93.12.30.22.45.10;	author Rhialto;	state Rel;
branches;
next	1.54;

1.54
date	93.06.24.05.04.58;	author Rhialto;	state Exp;
branches;
next	1.53;

1.53
date	92.10.25.03.14.14;	author Rhialto;	state Rel;
branches;
next	1.51;

1.51
date	92.04.17.15.39.31;	author Rhialto;	state Rel;
branches;
next	1.46;

1.46
date	91.10.06.18.26.11;	author Rhialto;	state Rel;
branches;
next	1.42;

1.42
date	91.06.14.00.05.28;	author Rhialto;	state Exp;
branches;
next	1.40;

1.40
date	91.03.03.17.57.26;	author Rhialto;	state Rel;
branches;
next	1.31;

1.31
date	90.11.10.02.42.14;	author Rhialto;	state Exp;
branches;
next	1.30;

1.30
date	90.06.04.23.20.55;	author Rhialto;	state Rel;
branches;
next	;


desc
@Fiddle with the device's library base to ignore CRC errors
@


1.56
log
@Add a cast.
@
text
@/*
 * $Id: ignore.c,v 1.56 1996/12/21 23:34:35 Rhialto Rel $
 *
 *  IGNORE.C
 *
 *  Makes it possible to ignore CRC errors.
 *
 *  This code is (C) Copyright 1989-1993 by Olaf Seibert. All rights reserved.
 *  May not be used or copied without a licence.
 */

#include "device.h"
#include <string.h>
#include <stdlib.h>

#ifndef CLIB_DOS_PROTOS_H
#include <clib/dos_protos.h>
#endif

const char	idString[] = "$""VER: Ignore $Revision: 1.56 $ $Date: 1996/12/21 23:34:35 $\r\n";

Puts(char *string)
{
    Write(Output(), string, (long)strlen(string));
}

int
main(int argc, char **argv)
{
    struct MsgPort *port;
    struct IOExtTD *tdreq;
    UNIT *unit;
    long unitnr;
    int yesno;
    int rc = 10;

    if (argc < 2) {
	Puts("Usage: ignore <unitnr> <YES/NO>\n");
	Puts("       If Yes, CRC errors will be ignored.\n");
	return rc;
    }

    unitnr = atoi(argv[1]);
    /*
     *	Don't be misled by the name CRC_UNCHECKED.
     *	It means the opposite happens.
     */
    if (argc > 2)
	yesno = ((argv[2][0] & 0x5F) == 'Y') ? TDERR_NoError : CRC_UNCHECKED;
    else
	yesno = -42;

    if (port = CreatePort(NULL, 0L)) {
	if (tdreq = (struct IOExtTD *)CreateExtIO(port, (long)sizeof(*tdreq))) {
	    OpenDevice("messydisk.device", unitnr, (struct IORequest *)tdreq,
		       0L);
	    if (tdreq->iotd_Req.io_Device) {
		unit = (UNIT *)tdreq->iotd_Req.io_Unit;
		if (yesno != -42) {
		    unit->mu_InitSectorStatus = yesno;
		    rc = 0;
		} else if (unit->mu_InitSectorStatus == CRC_UNCHECKED) {
		    Puts("No\n");
		    rc = 0;
		} else {
		    Puts("Yes\n");
		    rc = 5;
		}
		CloseDevice((struct IORequest *)tdreq);
	    } else
		Puts("Cannot OpenDevice messydisk\n");
	    DeleteExtIO((struct IORequest *)tdreq);
	} else
	    Puts("No memory for I/O request\n");
	DeletePort(port);
    } else
	Puts("No memory for replyport\n");

    return rc;
}
@


1.55
log
@Freeze for MAXON5.
@
text
@d2 1
a2 1
 * $Id: ignore.c,v 1.54 1993/06/24 05:04:58 Rhialto Exp $
d20 1
a20 1
const char	idString[] = "$VER: Ignore $Revision: 1.54 $ $Date: 1993/06/24 05:04:58 $\r\n";
d54 1
a54 1
	if (tdreq = CreateExtIO(port, (long)sizeof(*tdreq))) {
@


1.54
log
@return 5 if errors are ignored, 10 if error occurs. DICE 2.07.54R.
@
text
@d2 1
a2 1
 * $Id: ignore.c,v 1.54 1993/06/24 05:02:26 Rhialto Exp $
d20 1
a20 1
const char	idString[] = "$VER: Ignore $Revision: 1.54 $ $Date: 1993/06/24 05:02:26 $\r\n";
@


1.53
log
@No source change here; new device node makes this rev incompatible!!!
@
text
@d2 1
a2 1
 * $Id: ignore.c,v 1.51 92/04/17 15:39:31 Rhialto Rel $
d8 1
a8 1
 *  This code is (C) Copyright 1989-1991 by Olaf Seibert. All rights reserved.
d12 1
d15 6
a20 2
#include "device.h"
#include <functions.h>
d35 1
d40 1
a40 1
	exit(1);
d59 1
a59 1
		if (yesno != -42)
d61 2
a62 1
		else if (unit->mu_InitSectorStatus == CRC_UNCHECKED)
d64 2
a65 1
		else
d67 2
d79 1
a79 1
    return 0;
@


1.51
log
@Freeze for MAXON3.
@
text
@d2 1
a2 1
 * $Id: Ignore.c,v 1.46 91/10/06 18:26:11 Rhialto Rel $
a11 2
#include <amiga.h>
#include <functions.h>
a13 1
#include "dev.h"
d15 1
d22 1
d68 2
@


1.46
log
@
Freeze for MAXON
@
text
@d2 1
a2 1
 * $Id: Ignore.c,v 1.42 91/06/14 00:05:28 Rhialto Exp $
@


1.42
log
@DICE conversion
@
text
@d2 1
a2 1
 * $Id: ignore.c,v 1.40 91/03/03 17:57:26 Rhialto Rel $
@


1.40
log
@Freeze for MAXON
@
text
@d2 1
a2 1
 * $Id: ignore.c,v 1.31 90/11/10 02:42:14 Rhialto Exp $
d8 1
a8 1
 *  This code is (C) Copyright 1989 by Olaf Seibert. All rights reserved.
d12 4
d19 4
d24 1
a24 3
main(argc, argv)
int argc;
char **argv;
d26 2
a27 2
    struct MsgPort *port, *CreatePort();
    struct IOExtTD *tdreq, *CreateExtIO();
d50 2
a51 1
	    OpenDevice("messydisk.device", unitnr, tdreq, 0L);
d60 1
a60 1
		CloseDevice(tdreq);
d63 1
a63 1
	    DeleteExtIO(tdreq);
a69 10

Puts(string)
char *string;
{
    long Output();

    Write(Output(), string, (long)strlen(string));
}

_wb_parse(){}
@


1.31
log
@Added Id header.
@
text
@d2 1
a2 1
 * $Id$
@


1.30
log
@Release 1 Patch 3
@
text
@d2 2
@
